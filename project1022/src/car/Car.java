/* 파일 저장하실때, 자꾸 파일명과 클래스명이 틀리시는 분이 많아요
아래의 "Car" 단어를 더블 클릭한 후, 컨트롤 copy 한 후,   컨트롤 s 눌러보세요
그러고 붙여넣기 해서 저장하세요 car 패키지에 넣으셔야 합니다
*/
//이 클래스는 모든 자동차류의 최상위 클래스로서, 가장 보편적인 기능과 속성들만을
//보유하면 됩니다..

package car;
//public 으로 접근을 풀어주세요 모두~~
public class Car{
	//자동차의 보편적인 메서드는 뭐가 있을까요? 
	//백밀러, move, 바퀴, 브랜드, 전후진, 배기량...몇가지 선별해서 할께요
	String brand; //제조사는 정해져있으면 안되니깐 비워두겠습니다..
	
	//부모클래스의 생성자를 정의해주세요..매개변수가 없는 이러한 생성자도 디폴트 생성자입니다
	/*
	public Car(){
		System.out.println("자식의  super()호출에 의해 난 호출됩니다");
	}
	*/
	
	//개발자가 매개변수 있는 생성자만 정의함 , 개발자가 생성자를 정의하면 컴파일러에 의한 디폴트 생성자
	//자동 삽입은 없음 
	//따라서 Car클래스는 생성자가 오직 딱 1개만 있게 됨 
	//컴파일 해주세요 다시! , 이제 Taxi 를 new 할때 에러가 발생하겠죠? 
	public Car(String brand){ //매개변수 있는 생성자라서, new Car("벤츠") 등 방법으로 호출해야함
		this.brand = brand;
	}
	
	public Car(){	 //매개변수 없는 생성자도 추가한다...생성자가 2개이상 추가되면 마치 중복정의처럼
		//보이지만, 자세히 보면 매개변수의 갯수가 틀리므로 오버로딩으로 인정받는다..
		//이렇게 하면,  Taxi() 생성자에서 매개변수 없는 super() 호출시, 이 디폴트 생성자를 호출하게 되어
		//에러가 나지 않게 된다. 정말 그런지 테스트해봅니다.
	}
    

	public void move(){ //자동차의 가장 필수적인 요건이죠
		System.out.println("자동차가 갑니다");
	}
}







